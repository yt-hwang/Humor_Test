import React from "react";

export interface AxisScores {
  OI: number;
  NB: number; // Intuitive vs Abstract
  VP: number;
  BD: number;
}

type Suggestions = {
  strengths: string[];
  weaknesses: string[];
};

function getLean(value: number): "A" | "B" | "N" {
  const delta = value - 4; // negative => BÏ∏°, positive => AÏ∏° (Ï∂ï Ìï¥ÏÑùÏóê Ï£ºÏùò)
  if (Math.abs(delta) < 0.25) return "N"; // Í±∞Ïùò Ï§ëÎ¶ΩÏù¥Î©¥ Ï†úÏô∏
  return delta > 0 ? "A" : "B";
}

function buildSuggestions(scores: AxisScores): Suggestions {
  const result: Suggestions = { strengths: [], weaknesses: [] };

  // OI: A=Organized(>4), B=Improvised(<4)
  const oiLean = getLean(scores.OI);
  if (oiLean === "A") {
    result.strengths.push(
      "Íµ¨Ï°∞ ÏÑ§Í≥ÑÍ∞Ä ÌÉÑÌÉÑÌï¥ ÌùêÎ¶ÑÏùÑ Ï£ºÎèÑÌï©ÎãàÎã§",
      "ÏΩúÎ∞±¬∑ÌÉúÍ∑∏ Îì± Íµ¨ÏÑ± Ïû•ÏπòÎ•º ÏïàÏ†ïÏ†ÅÏúºÎ°ú Ïö¥Ïö©Ìï©ÎãàÎã§"
    );
    result.weaknesses.push(
      "ÎèåÎ∞ú ÏÉÅÌô©ÏóêÏÑú Ïú†Ïó∞ÏÑ±Ïù¥ Îñ®Ïñ¥Ïßà Ïàò ÏûàÏäµÎãàÎã§",
      "Í≥ºÌïú Ï§ÄÎπÑÎ°ú ÌÉÄÏù¥Î∞çÏùÑ ÎÜìÏπ† ÏúÑÌóòÏù¥ ÏûàÏäµÎãàÎã§"
    );
  } else if (oiLean === "B") {
    result.strengths.push(
      "ÏàúÍ∞Ñ ÏÑºÏä§ÏôÄ Î∞õÏïÑÏπòÍ∏∞Í∞Ä Îõ∞Ïñ¥ÎÇ©ÎãàÎã§",
      "ÏòàÏÉÅ Î∞ñ Ï†ÑÌôòÏúºÎ°ú Ïû•Î©¥ÏùÑ ÏÇ¥Î¶ΩÎãàÎã§"
    );
    result.weaknesses.push(
      "Ïû•Í∏∞ Íµ¨Ï°∞ÎÇò Î≥µÏÑ† ÌöåÏàòÏóê ÏïΩÌï† Ïàò ÏûàÏäµÎãàÎã§",
      "ÎßàÍ∞ê ÏßÅÏ†Ñ Î∂ÄÎã¥¬∑Ï¶âÌù• Í≥ºÎã§Î°ú ÌíàÏßà Ìé∏Ï∞®Í∞Ä ÏÉùÍ∏∏ Ïàò ÏûàÏäµÎãàÎã§"
    );
  }

  // NB: A=Intuitive(>4), B=Abstract(<4)
  const nbLean = getLean(scores.NB);
  if (nbLean === "A") {
    result.strengths.push(
      "ÏÉÅÌô© Îß•ÎùΩÍ≥º Í≥µÍ∞ê Ìè¨Ïù∏Ìä∏Î•º Ïûò Ìè¨Ï∞©Ìï©ÎãàÎã§",
      "ÌòÑÏã§Ï†Å ÎîîÌÖåÏùºÎ°ú Î™∞ÏûÖÏùÑ ÎßåÎì≠ÎãàÎã§"
    );
    result.weaknesses.push(
      "ÏïÑÏù¥ÎîîÏñ¥Ïùò Ï∞∏Ïã†ÎèÑÍ∞Ä ÎÇÆÏïÑ Î≥¥Ïùº Ïàò ÏûàÏäµÎãàÎã§",
      "Î©îÌÉÄ/Ï∂îÏÉÅ Ïû•Ïπò ÌôúÏö©Ïù¥ Ï†úÌïúÎê† Ïàò ÏûàÏäµÎãàÎã§"
    );
  } else if (nbLean === "B") {
    result.strengths.push(
      "ÎèÖÌäπÌïú ÏΩòÏÖâÌä∏¬∑ÎπÑÏú†¬∑Ïó≠ÏÑ§ÏùÑ Ïûò ÏîÅÎãàÎã§",
      "Î©îÌÉÄ Ïú†Î®∏Î°ú ÏÉàÎ°úÏõÄÏùÑ ÎßåÎì≠ÎãàÎã§"
    );
    result.weaknesses.push(
      "ÎÇúÌï¥ÌïòÍ≤å ÎäêÍª¥Ïßà Ïàò ÏûàÏäµÎãàÎã§",
      "ÏÉÅÌô© Îß•ÎùΩÍ≥º ÎèôÎñ®Ïñ¥Ï†∏ Î≥¥Ïùº ÏúÑÌóòÏù¥ ÏûàÏäµÎãàÎã§"
    );
  }

  // VP: A=Verbal(>4), B=Physical(<4)
  const vpLean = getLean(scores.VP);
  if (vpLean === "A") {
    result.strengths.push(
      "ÏõåÎî©¬∑ÌÉÄÏù¥Î∞ç Îì± Ïñ∏Ïñ¥Ï†Å Ï†ïÎ∞ÄÎèÑÍ∞Ä ÎÜíÏäµÎãàÎã§",
      "ÏßßÏùÄ Ìïú Ï§ÑÎ°ú Í≥µÍ∏∞Î•º Ï†ÑÌôòÌï©ÎãàÎã§"
    );
    result.weaknesses.push(
      "ÌëúÏ†ï¬∑Î™∏Ïßì Îì± Ïã†Ï≤¥ ÌëúÌòÑ ÌôúÏö©Ïù¥ Ï†ÅÏùÑ Ïàò ÏûàÏäµÎãàÎã§",
      "ÏÑ§Î™Ö Í≥ºÎã§Î°ú ÌÖúÌè¨Í∞Ä Îñ®Ïñ¥Ïßà Ïàò ÏûàÏäµÎãàÎã§"
    );
  } else if (vpLean === "B") {
    result.strengths.push(
      "ÌëúÏ†ï¬∑Î™∏Ïßì¬∑ÎèôÏÑ†ÏúºÎ°ú Ïû•Î©¥ÏùÑ Ïû•ÏïÖÌï©ÎãàÎã§",
      "Îßê ÏóÜÏù¥ÎèÑ ÏùòÎØ∏Î•º Ï†ÑÎã¨Ìï©ÎãàÎã§"
    );
    result.weaknesses.push(
      "Ïñ∏Ïñ¥Ï†Å Ï†ïÎ∞Ä ÌÉÄÍ≤©Ïù¥ ÏïΩÌï† Ïàò ÏûàÏäµÎãàÎã§",
      "ÏÑ§Î™ÖÏù¥ Î∂ÄÏ°±Ìï¥ Ïò§Ìï¥Í∞Ä ÏÉùÍ∏∏ Ïàò ÏûàÏäµÎãàÎã§"
    );
  }

  // BD: A=Bright(>4), B=Dark(<4)
  const bdLean = getLean(scores.BD);
  if (bdLean === "A") {
    result.strengths.push(
      "Î∞ùÏùÄ ÌÜ§ÏúºÎ°ú Î∂ÑÏúÑÍ∏∞Î•º ÎùÑÏö∞Í≥† Ïó∞Í≤∞Ìï©ÎãàÎã§",
      "Ìé∏ÌïòÍ≤å ÏõÉÏùÑ Ïàò ÏûàÎäî Ïû•Î©¥ÏùÑ ÎßåÎì≠ÎãàÎã§"
    );
    result.weaknesses.push(
      "Î¨¥Í≤åÍ∞ê¬∑Ïó¨Ïö¥Ïù¥ Î∂ÄÏ°±Ìï¥ Î≥¥Ïùº Ïàò ÏûàÏäµÎãàÎã§",
      "ÏßÑÏßÄÌïú Î©îÏãúÏßÄÏôÄÎäî Í±∞Î¶¨Í∞êÏù¥ ÏÉùÍ∏∏ Ïàò ÏûàÏäµÎãàÎã§"
    );
  } else if (bdLean === "B") {
    result.strengths.push(
      "Î∏îÎûôÏú†Î®∏¬∑ÌíçÏûêÎ°ú Í∞ïÌïú Ïù∏ÏÉÅÏùÑ ÎÇ®ÍπÅÎãàÎã§",
      "Ïó¨Ïö¥Í≥º ÌÜµÏ∞∞ÏùÑ ÎßåÎì§Ïñ¥ÎÉÖÎãàÎã§"
    );
    result.weaknesses.push(
      "Î∂ÑÏúÑÍ∏∞Í∞Ä Î¨¥Í≤ÅÍ≤å ÎäêÍª¥Ïßà Ïàò ÏûàÏäµÎãàÎã§",
      "Î∞òÎ∞ú¬∑ÌîºÎ°úÍ∞êÏùÑ Ïú†Î∞úÌï† ÏúÑÌóòÏù¥ ÏûàÏäµÎãàÎã§"
    );
  }

  // ÏÉÅÏúÑ 6Í∞úÎßå ÎÖ∏Ï∂ú (Ï§ëÎ≥µ ÎßéÏúºÎ©¥ ÏïûÏ™ΩÏóêÏÑú Ïä¨ÎùºÏù¥Ïä§)
  return {
    strengths: result.strengths.slice(0, 6),
    weaknesses: result.weaknesses.slice(0, 6),
  };
}

export default function StrengthsWeaknesses({ scores }: { scores: AxisScores }) {
  const { strengths, weaknesses } = buildSuggestions(scores);

  return (
    <div className="bg-white/60 backdrop-blur-sm rounded-2xl p-6 mb-6 border border-white/30">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Í∞ïÏ†ê */}
        <div>
          <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
            <span>üí™</span>
            Í∞ïÏ†ê
          </h3>
          <ul className="space-y-3">
            {strengths.map((s, idx) => (
              <li key={idx} className="flex items-start gap-2">
                <span className="text-green-500 mt-0.5">‚úî</span>
                <span className="text-sm text-gray-700 leading-relaxed">{s}</span>
              </li>
            ))}
          </ul>
        </div>

        {/* ÏïΩÏ†ê */}
        <div>
          <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
            <span>‚ö†Ô∏è</span>
            ÏïΩÏ†ê
          </h3>
          <ul className="space-y-3">
            {weaknesses.map((w, idx) => (
              <li key={idx} className="flex items-start gap-2">
                <span className="text-yellow-500 mt-0.5">!</span>
                <span className="text-sm text-gray-700 leading-relaxed">{w}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
}


